<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use App\Models\Item;

class AuthController extends Controller
{
    // Tampilkan form login (atau form buat akun pertama jika belum ada satupun user)
    public function showLogin()
    {
        if (User::count() === 0) {
            return view('auth.first_account');
        }

        return view('auth.login');
    }

    // Proses login tanpa memilih role—hanya name & password
public function doLogin(Request $req)
{
    // 1) Validasi form: hanya name & password
    $credentials = $req->validate([
        'name'     => 'required|string',
        'password' => 'required|string',
    ]);

    // 2) Cari user berdasarkan name
    $user = User::where('name', $credentials['name'])->first();

    // 3) Jika tidak ada user atau password salah
    if (!$user || ! Hash::check($credentials['password'], $user->password)) {
        return back()
            ->withErrors(['name' => 'Nama atau password salah.'])
            ->withInput(['name' => $credentials['name']]);
    }

    // 4) Login user
    Auth::login($user);
    $req->session()->regenerate();

    // 5) Redirect berdasarkan role
    if ($user->role === 'admin' || $user->role === 'petugas') {
        // Keduanya menuju /dashboard
        return redirect()->intended(route('dashboard'));
    }

    // Jika viewer
    return redirect()->intended(route('home'));
}

    // Dashboard untuk semua role—jika Anda ingin satu home dengan konten beda, gunakan switch
    public function home()
    {
        $user = Auth::user();
        $items = Item::all();
        return view('home', compact('user', 'items'));
    }

    // Logout
    public function logout(Request $req)
    {
        Auth::logout();
        $req->session()->invalidate();
        $req->session()->regenerateToken();
        return redirect()->route('login');
    }
}
